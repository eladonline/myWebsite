{"version":3,"file":"static/webpack/static\\development\\pages\\solutions.js.6eeef98db035afd8ac91.hot-update.js","sources":["webpack:///./src/components/fixed/navbar/index.js","webpack:///./src/components/helpers/helpers.js","webpack:///./src/components/sections/footer/footer.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport Brand from './Brand/Brand';\r\nimport Login from './Collapse/login';\r\nimport LoggedIn from './Collapse/loggedIn';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst brand = '/static/icon/we_factor_logo.png';\r\nconst brand_invert = '/static/icon/we_factor_logo_invert.png';\r\n\r\nexport default class MainNavbar extends Component {\r\n  /**\r\n   *\r\n   * @param {number} prevProps.offset\r\n   * @param {number} prevState.offset\r\n   * @summary detect change in the invers prop\r\n   */\r\n  /**\r\n   *\r\n   * @param {string} user\r\n   * @return login or loggedIn state to view\r\n   */\r\n  isLoggedIn(user) {\r\n    // 'Unsigned' Linked to private Layout\r\n    return user ? <LoggedIn invert={this.props.invert} /> : <Login />;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Navbar collapseOnSelect id=\"mainNavbar\">\r\n        <Navbar.Header>\r\n          <Brand image={this.props.invert  ?brand_invert :brand} />\r\n          <Navbar.Toggle />\r\n        </Navbar.Header>\r\n        <Navbar.Collapse>{this.isLoggedIn('elad+1@committed.co.il')}</Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nMainNavbar.defaultProps = {\r\n  invert: 0\r\n};\r\n\r\nMainNavbar.propTypes = {\r\n  invert: PropTypes.number\r\n};\r\n","export const picture = (component, aSet, uniqkey) => {\r\n  const aMedia = ['(min-width: 1600px)', '(min-width: 768px)', '(min-width: 0px)'];\r\n  const sources = aMedia.map((query, i) => {\r\n    return <source key={`${uniqkey}-${i}`} srcSet={aSet[i]} media={query} />;\r\n  });\r\n  return (\r\n    <picture>\r\n      {sources}\r\n      {component}\r\n    </picture>\r\n  );\r\n};\r\n/**\r\n * @function hudiniNavbar\r\n * @argument {object} el the element\r\n * @argument {array} value two value to switch between \r\n * @argument {bool} bool indicate when to switch\r\n * @argument {string} sStyle the style\r\n * @summary change element background if page scrolled\r\n */\r\nexport const hudiniElement = (el, value, bool, sStyle = 'background') => {\r\n  bool ? (el.style[sStyle] = value[0]) : (el.style[sStyle] = value[1]);\r\n};\r\n\r\nexport const nodeToArray = node => {\r\n  var nodesArray = [].slice.call(node);\r\n  return nodesArray;\r\n};\r\n\r\nexport const renderBlocks = aBlock => {\r\n  return aBlock.map(block => {\r\n    return block.bold ?<span className='bold' key={block.text}>{block.text}</span> :<p key={block.text}>{block.text}</p>;\r\n  });\r\n};\r\n","import React, { PureComponent } from 'react';\r\nimport Link from 'next/link';\r\nexport default class Footer extends PureComponent {\r\n  render() {\r\n    return (\r\n      <footer className=\"footer\" dir='rtl'>\r\n        <Link href='/about'>\r\n          <p>קצת עלינו</p>\r\n        </Link>\r\n        <Link href='/whyUs'>\r\n          <p>למה דווקא אנחנו</p>\r\n        </Link>\r\n        <div> &copy; כל הזכויות שמורות לחברת we FactoR</div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;AACA;;;;;;;AAMA;;;;;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA3BA;AACA;AADA;AA8BA;AACA;AADA;AAIA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;;;;;;;;;AAQA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCA;AACA;AACA;AAAA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAbA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}