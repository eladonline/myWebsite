{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.5b64e4e3fd2786c13c63.hot-update.js","sources":["webpack:///./src/components/helpers/helpers.js"],"sourcesContent":["export const picture = (component, aSet, uniqkey) => {\r\n  const aMedia = ['(min-width: 1600px)', '(min-width: 768px)', '(min-width: 0px)'];\r\n  const sources = aMedia.map((query, i) => {\r\n    return <source key={`${uniqkey}-${i}`} srcSet={aSet[i]} media={query} />;\r\n  });\r\n  return (\r\n    <picture>\r\n      {sources}\r\n      {component}\r\n    </picture>\r\n  );\r\n};\r\n/**\r\n * @function hudiniNavbar\r\n * @argument {object} el the element\r\n * @argument {array} value two value to switch between \r\n * @argument {bool} bool indicate when to switch\r\n * @argument {string} sStyle the style\r\n * @summary change element background if page scrolled\r\n */\r\nexport const hudiniElement = (el, value, bool, sStyle = 'background') => {\r\n  bool ? (el.style[sStyle] = value[0]) : (el.style[sStyle] = value[1]);\r\n};\r\n\r\nexport const nodeToArray = node => {\r\n  var nodesArray = [].slice.call(node);\r\n  return nodesArray;\r\n};\r\n\r\nexport const renderBlocks = aBlock => {\r\n  return aBlock.map(block => {\r\n    return text.bold ?<span className='bold' key={block.text}>{block.text}</span> :<p key={block.text}>{block.text}</p>;\r\n  });\r\n};\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;;;;;;;;;AAQA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;A","sourceRoot":""}